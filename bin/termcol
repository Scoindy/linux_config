#!/bin/bash

# 8 ANSI colours:
#  control sequence initiator \033[
#  terminator m
#  30 -> 38 (foreground)
#  40 -> 48 (background)
#  rendering options: 
#    1 bold/bright
#    2 dim
#    3 italics
#    4 underline
#    7 reverse
#
# echo -e "\033[32mforeground green"
# echo -e "\033[1;32mforeground green bold"
# echo -e "\033[2;32mforeground green dim"
# echo -e "\033[4;32mforeground green underlined"
# echo -e "\033[7;32mreverse"
# echo -e "\033[32mforeground green\033[mback to terminal default"
# echo -e "\033[46mbackground cyan"
# echo -e "\033[46mbackground cyan\033[4;31mforeground red underlined"
#
# defaults are often set by the terminal profile
# e.g. if using gnome-terminal and the terminal profile defaults bold to red
#      then specifying bold without a colour will give you bold red
#        echo -e "\033[1mthis text is whatever default bold is"
#
# if using in a prompt need to wrap in \[....\]
#   e.g. export PS1="\[\033[1,32m\] bright green prompt \[033[m\] $
#   
# what's available:
# each line is the color code of one forground color,
# out of 17 (default + 16 escapes), followed by a test use of that color
# on all nine background colors (default + 8 escapes).
#
T="text"
echo -e "\n                 40m     41m     42m     43m     44m     45m     46m     47m";
for FGs in '    m' '   1m' '  30m' '1;30m' '  31m' '1;31m' '  32m' '1;32m' '  33m' '1;33m' '  34m' '1;34m' '  35m' '1;35m' '  36m' '1;36m' '  37m' '1;37m'; do
  FG=${FGs// /}
  echo -en " $FGs \033[$FG  $T  "
  for BG in 40m 41m 42m 43m 44m 45m 46m 47m; do 
    echo -en "$EINS \033[$FG\033[$BG  $T \033[0m\033[$BG \033[0m";
  done
  echo;
done
echo

# 8-bit colours
# generates an 8 bit color table (256 colors) for reference,
# use \033[48;5;${val}m for background 
# and \033[38;5;${val}m for foreground
#
echo -en "\n   +  "
  for i in {0..35}; do
  printf "%2b " $i
done
printf "\n\n %3b  " 0
for i in {0..15}; do
  echo -en "\033[48;5;${i}m  \033[m "
done
#for i in 16 52 88 124 160 196 232; do
for i in {0..6}; do
  let "i = i*36 +16"
  printf "\n\n %3b  " $i
  for j in {0..35}; do
    let "val = i+j"
    echo -en "\033[48;5;${val}m  \033[m "
  done
done
echo -e "\n"

